{"version":3,"sources":["Components/common/AccordionComponent.js","Components/utils/Utils.js","Components/SmartDropDownSearch.js","Components/utils/Axios.js","Components/App.js","index.js"],"names":["AccordionComponent","props","Accordion","defaultActiveKey","Card","Toggle","eventKey","title","className","Collapse","Body","children","filterCountries","countryList","CountryInput","displayCountryList","country","indexOf","push","SmartDropDownSearch","searchCountry","value","a","setState","state","increaseDispLimit","newlimit","displayLimit","noOfItems","fnAddCountry","disableAddBtn","addAndSelectHandler","this","searchField","focus","prevProps","privilidge","aria-hidden","type","onChange","e","target","ref","d","slice","map","index","key","onClick","length","disabled","Component","axios","create","baseURL","responseType","App","fnGetCountryList","Axios","get","result","status","alert","data","countries","loading","flag","response","selectedCountry","changeUser","val","loggedInAs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb6375b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nfunction AccordionComponent(props){\r\n  return(\r\n    <Accordion defaultActiveKey=\"0\">\r\n      <Card>\r\n        <Accordion.Toggle eventKey=\"0\">\r\n          {props.title}\r\n          <i className=\"fa fa-angle-down\"></i>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n          <Card.Body>\r\n            {props.children}\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nexport default AccordionComponent;","export function filterCountries(countryList,CountryInput){\r\n  let displayCountryList = [];\r\n  for(let country of countryList){\r\n    if(country.indexOf(CountryInput) > -1){\r\n      displayCountryList.push(country);\r\n    }\r\n  }\r\n  return displayCountryList;\r\n}","import React, { Component } from 'react';\r\nimport AccordionComponent from './common/AccordionComponent'\r\nimport { filterCountries } from './utils/Utils';\r\n\r\nclass SmartDropDownSearch extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      CountryInput:'',\r\n      displayCountryList: this.props.countryList,\r\n      displayLimit: this.props.noOfItems,\r\n      disableAddBtn: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.searchField.focus()\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(prevProps.countryList !== this.props.countryList){\r\n      if(this.props.countryList){\r\n        this.setState({\r\n          countryList : this.props.countryList\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  searchCountry = async value => {\r\n    await this.setState({CountryInput : value});\r\n    const countryList = this.props.countryList;\r\n    const CountryInput = this.state.CountryInput;\r\n    const displayCountryList = filterCountries(countryList,CountryInput);\r\n    this.setState({displayCountryList});\r\n  }\r\n\r\n  increaseDispLimit = () => {\r\n    const oldLimit = this.state.displayLimit;\r\n    const newlimit = oldLimit + this.props.noOfItems;\r\n    this.setState({displayLimit: newlimit})\r\n  }\r\n\r\n  fnAddCountry = async () => {\r\n    const { CountryInput } = this.state;\r\n    await this.setState({\r\n      disableAddBtn: true\r\n    });\r\n    this.props.addAndSelectHandler(CountryInput, 'Add');\r\n  }\r\n\r\n  render(){\r\n    const { CountryInput, displayCountryList, displayLimit, disableAddBtn } = this.state;\r\n    const { noOfItems, privilidge, addAndSelectHandler } = this.props;\r\n    return (\r\n      <div className=\"smart-search\">\r\n        <AccordionComponent title=\"Select a location\">\r\n          <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n          <input type=\"text\" value={CountryInput}\r\n            onChange={e => this.searchCountry(e.target.value)}\r\n            ref={d=>this.searchField=d}\r\n            />\r\n          <div className=\"search-result\">\r\n            {displayCountryList.slice(0, displayLimit).map((country,index) => (\r\n                <li key={index} onClick={()=>addAndSelectHandler(country, 'Select')}>{country}</li>\r\n            ))}\r\n            {displayCountryList.length>displayLimit &&\r\n              <p onClick={this.increaseDispLimit}>{`${noOfItems} more...`}</p>\r\n            }\r\n            {displayCountryList.length === 0 && \r\n              <li className=\"mt-1\" disabled>\r\n                {`\"${CountryInput}\" not found`}\r\n                {privilidge && <button className=\"add-select\" onClick={this.fnAddCountry} disabled={disableAddBtn}>Add & select</button>}\r\n              </li>\r\n            }\r\n          </div>\r\n        </AccordionComponent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SmartDropDownSearch;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://13.57.235.126:5000/\",\r\n  responseType: \"json\"\r\n});","import React, {Component} from 'react';\nimport SmartDropDownSearch from './SmartDropDownSearch';\nimport Axios from './utils/Axios'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      loading : true,\n      countryList : [],\n      selectedCountry : '',\n      privilidge : true,\n      noOfItems : 5,\n      loggedInAs: 'admin'\n    }\n  }\n\n  componentDidMount() {\n    this.fnGetCountryList();\n  }\n\n  fnGetCountryList = async () => {\n    try{\n      const result = await Axios.get('/countries');\n      if(result.status !== 200){ // if Response Status is not 200\n        alert(\"something went wrong! Please try again later.\");\n        return false;\n      }\n\n      const countryList = result.data.countries;\n      this.setState({ countryList, loading: false });\n    } catch (e) {\n      alert(`something went wrong! Please try again later.`);\n    }\n  }\n\n  addAndSelectHandler = async (CountryInput, flag) => {\n    if(flag === \"Add\"){  // In case user clicks on Add Button\n      try{\n        const result = await Axios.get(`/addcountry?name=${CountryInput}`);\n        if(result.status !== 200){ // if Response Status is not 200\n          alert(\"something went wrong! Please try again later.\");\n          return false;\n        }\n        alert(\"Added Successfully !!!\");\n        await this.setState({loading: true})\n        this.fnGetCountryList();\n      }\n      catch(e){\n        if(e.response.status === 500){\n          alert(\"You are not allowed to add duplicate!!\")\n        }\n      }\n    }\n    else if(flag === \"Select\") { // In case user selects any country\n      this.setState({selectedCountry : CountryInput})\n    }\n  }\n\n  changeUser = val => {\n    const privilidge = (val === 'admin') ? true : false;\n    this.setState({loggedInAs: val, privilidge})\n  }\n\n  render(){\n    const { loading, countryList, selectedCountry, privilidge, noOfItems, loggedInAs } = this.state;\n    \n    if(loading) return '';  // If Page is Loading white screen to be displayed\n    \n    return (\n      <div className=\"App\">\n        <div className=\"loginSection\">\n          Logged In As :\n          <p className={(loggedInAs==='admin')?'active':''}\n            onClick={()=>this.changeUser('admin')}>\n            Admin\n          </p>\n          |\n          <p className={(loggedInAs==='user')?'active':''} \n            onClick={()=>this.changeUser('user')}>\n            User\n          </p>\n        </div>\n        <SmartDropDownSearch countryList={countryList} privilidge={privilidge} noOfItems={noOfItems} addAndSelectHandler={this.addAndSelectHandler} />\n        <br/>\n        <p>{`Selected Country : ${selectedCountry}`}</p>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"font-awesome/css/font-awesome.css\"\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}